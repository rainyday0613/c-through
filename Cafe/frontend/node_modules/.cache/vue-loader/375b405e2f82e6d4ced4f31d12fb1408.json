{"remainingRequest":"/home/bitai/Desktop/c-through/Cafe/frontend/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/bitai/Desktop/c-through/Cafe/frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/bitai/Desktop/c-through/Cafe/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/bitai/Desktop/c-through/Cafe/frontend/src/components/register/RegisterPage.vue?vue&type=template&id=465bde04&","dependencies":[{"path":"/home/bitai/Desktop/c-through/Cafe/frontend/src/components/register/RegisterPage.vue","mtime":1603688382840},{"path":"/home/bitai/Desktop/c-through/Cafe/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/bitai/Desktop/c-through/Cafe/frontend/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/bitai/Desktop/c-through/Cafe/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/bitai/Desktop/c-through/Cafe/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}