{"remainingRequest":"/home/bitai/Desktop/c-through/Cafe/frontend/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/bitai/Desktop/c-through/Cafe/frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/bitai/Desktop/c-through/Cafe/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/bitai/Desktop/c-through/Cafe/frontend/src/layout/SideBar.vue?vue&type=template&id=26ff2c60&","dependencies":[{"path":"/home/bitai/Desktop/c-through/Cafe/frontend/src/layout/SideBar.vue","mtime":1603415743505},{"path":"/home/bitai/Desktop/c-through/Cafe/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/bitai/Desktop/c-through/Cafe/frontend/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/bitai/Desktop/c-through/Cafe/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/bitai/Desktop/c-through/Cafe/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}